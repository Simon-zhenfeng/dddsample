  --------
  Download
  --------

Download

  * Java 6 or later

  []

  Optional:

  * {{{http://maven.apache.org}Maven}} 2.0.9 or later (for development)

  * A servlet container, such as {{{http://tomcat.apache.org}Tomcat}} (for deploying the web archive)

Downloads

    There are two {{{http://sourceforge.net/project/showfiles.php?group_id=210606}downloads}} available:
    the core application {{{http://downloads.sourceforge.net/dddsample/dddsample-1.0-src.zip?use_mirror=osdn} source package}},
    and the {{{http://downloads.sourceforge.net/dddsample/IncidentLoggingApplication.zip?use_mirror=osdn} Incident Logging Application}}.

    The project uses Maven for build and management.

* Source package

    Download {{{http://downloads.sourceforge.net/dddsample/dddsample-1.0-src.zip?use_mirror=osdn} here}}.

    This is a complete checkout of the core application source code.

    To build a web archive from scratch (to be found in the target directory):

-----------------
mvn clean package
-----------------

    To build and run the application in an embedded Jetty:

-------------
mvn jetty:run
-------------

    The start page is available at {{http://localhost:8080/dddsample}}, and has links to the various interfaces.

	There is a {{{screencast.html}screencast}} available on the project site that demonstrates how the different interfaces are used.

    An RMI registry will be started on port <<<1099>>>, in addition to the Jetty container on port <<<8080>>>, so those ports
    need to be available or you have to reconfigure the application.

    Also, you can {{{source-repository.html}track Subversion}} directly.
    Subversion repository information is available in the {{{source-repository.html}project information section}}.

* Incident Logging Application

    Download {{{http://downloads.sourceforge.net/dddsample/IncidentLoggingApplication.zip?use_mirror=osdn} here}}.

    This is a simple, standalone Swing client that's used for registering handling events. It communicates with the core
    application via a Web Service interface. Unpack and run:

----------------------------------------
cd IncidentLoggingApplication

java -jar IncidentLoggingApplication.jar
----------------------------------------

    <<NOTE>>: before you start the Incident Logging Application, the core application must be running on the
    WSDL URL host in the file <<<app.properties>>>, which defaults to <<<localhost:8080>>>.
    Edit this file to point at the host where the core application is running.

    The source code for this application is currently only available {{{source-repository.html}in Subversion}}.

IDE Setup

    * IntelliJ 7 or later:

      Maven support is integrated - simply open project using the <<<pom.xml>>>.

    * Netbeans 6 or later:

      Install the Maven plugin (Tools -> Plugins -> Available Plugins), then open project.

    * Eclipse

      Eclipse support for Maven is still a bit rocky, so project descriptor files have been
      committed into the repository so that the project can immediately be opened with
      minimal additional configuration.

      The only thing you need to do is to is to define the classpath variable M2_REPO,
      which is:

      * Windows: C:\Documents and Settings\<Your username>\.m2\repository

      * Mac: /Users/<Your username>\.m2\repository

      * Unix: /home/<Your username>\.m2\repository

      Go to Window -> Preferences, Java -> Build Path -> Classpath variables, New.
      Set the name to M2_REPO and use the Folder button to browse to the aforementioned location.

About Maven

    Maven downloads all external library dependencies and plugins separately, which can amount to quite a large number of
    small files that are downloaded sequentially. These are all cached locally, but the first time you run it you should
    be prepared to wait 5-10 minutes for the build to complete, depending on your network conditions.

    A good way to get going is to execute the following command, and then go grab a cup of coffee:

---------------------------
mvn clean package jetty:run
---------------------------

    That will fill your local cache with most of what you need for development, in a one shot.
