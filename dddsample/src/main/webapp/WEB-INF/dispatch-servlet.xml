<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

  <bean name="/start.html" class="se.citerus.dddsample.web.CargoTrackingController">
    <property name="sessionForm" value="true"/>
    <property name="commandName" value="trackCommand"/>
    <property name="formView" value="start"/>
    <property name="successView" value="start"/>
    <property name="cargoService" ref="cargoService"/>
    <property name="validator" ref="trackCommandValidator"/>
    <property name="unknownCargoView" value="unknownCargo"/>
  </bean>

  <bean id="trackCommandValidator" class="se.citerus.dddsample.web.command.TrackCommandValidator"/>

  <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    <property name="prefix" value="/WEB-INF/jsp/"/>
    <property name="suffix" value=".jsp"/>
  </bean>
  
  <!--
    - This bean resolves specific types of exceptions to corresponding logical 
    - view names for error views. The default behaviour of DispatcherServlet 
    - is to propagate all exceptions to the servlet container: this will happen 
    - here with all other types of exceptions.
  -->
  <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    <property name="exceptionMappings">
      <props>
        <prop key="org.springframework.dao.DataAccessException">dataAccessFailure</prop>
      </props>
    </property>
  </bean>

</beans>