<?xml version="1.0"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:ws="http://jax-ws.dev.java.net/spring/core"
       xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://jax-ws.dev.java.net/spring/core https://jax-ws.dev.java.net/spring/core.xsd
        http://jax-ws.dev.java.net/spring/servlet https://jax-ws.dev.java.net/spring/servlet.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">


  <!-- Handling event registration web service -->

  
  <wss:bindings id="jax-ws.http">
    <wss:bindings>
      <wss:binding url="/ws/RegisterEvent">
        <wss:service>
          <ws:service bean="#handlingEventServiceEndpoint"/>
        </wss:service>
      </wss:binding>
    </wss:bindings>
  </wss:bindings>

  <bean id="handlingEventServiceEndpoint" class="se.citerus.dddsample.application.ws.HandlingEventServiceEndpointImpl">
    <property name="handlingEventService" ref="handlingEventService"/>
  </bean>


  <!-- Booking service facade -->

  
  <!-- Hibernate interceptor -->
  <bean id="hibernateInterceptor" class="org.springframework.orm.hibernate3.HibernateInterceptor">
    <property name="sessionFactory" ref="sessionFactory"/>
  </bean>

  <!-- Facade wrapped with Hibernate interceptor -->
  <bean id="bookingServiceFacade" class="org.springframework.aop.framework.ProxyFactoryBean">
    <property name="interceptorNames">
      <list>
        <value>hibernateInterceptor</value>
      </list>
    </property>
    <property name="target">
      <bean class="se.citerus.dddsample.application.service.BookingServiceFacadeImpl">
        <property name="bookingService" ref="bookingService"/>
        <property name="cargoRepository" ref="cargoRepository"/>
        <property name="locationRepository" ref="locationRepository"/>
        <property name="carrierMovementRepository" ref="carrierMovementRepository"/>
      </bean>
    </property>
  </bean>

  <!-- Wrap all methods with Hibernate interceptor
  TODO: add necessary aspectj deps and replace config above with this
  
  <bean id="bookingServiceFacade" class="se.citerus.dddsample.application.service.BookingServiceFacadeImpl">
    <property name="bookingService" ref="bookingService"/>
    <property name="cargoRepository" ref="cargoRepository"/>
    <property name="locationRepository" ref="locationRepository"/>
    <property name="carrierMovementRepository" ref="carrierMovementRepository"/>
  </bean>

  <aop:config>
    <aop:advisor advice-ref="hibernateInterceptor"
                 pointcut="execution (* se.citerus.dddsample.application.service.BookingServiceFacadeImpl(..))"/>
  </aop:config>
  -->

  <!-- RMI exposure -->
  <bean id="rmiBookingServiceFacade" class="org.springframework.remoting.rmi.RmiServiceExporter">
    <property name="serviceInterface" value="se.citerus.dddsample.application.service.BookingServiceFacade"/>
    <property name="service" ref="bookingServiceFacade"/>
    <property name="serviceName" value="BookingService"/>
  </bean>

</beans>